esphome:
  name: bar_bulb
  platform: ESP8266
  board: esp01_1m

wifi:
  ssid: !secret ssid
  password: !secret pass

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "bar_bulb_hs"
    password: !secret bar_light_pass

captive_portal:

# Enable logging
logger:

# Enable Home Assistant API
api:
  services:
    - service: sync_lights
      then:
        - lambda: |-
            id(state) = 5;

ota:

globals:
  - id: state
    type: int
    restore_value: no
    initial_value: '5'

time:
  # - platform: homeassistant
  #   id: homeassistant_time
  #   on_time:
  #     - seconds: 0, 30
  #       then:
  #         - lambda: |-
  #             if (id(basement_scene).state != "None") {
  #               auto call = id(lightbulb).turn_on();
  #               call.set_transition_length(5000);
  #               if (id(basement_scene).state != "Rainbow") {
  #                 if ((id(state) & 1) == 0) {
  #                   if (id(basement_scene).state == "Light Blue") call.set_rgb(0, 1, 1);
  #                 }
  #                 else {
  #                   if (id(basement_scene).state == "Light Blue") call.set_rgb(0, 0, 1);
  #                 }
  #               }
  #               else {
  #                 if (id(state) == 0) {
  #                   call.set_rgb(1, 0, 0);
  #                 }
  #                 else if (id(state) == 1) {
  #                   call.set_rgb(1, 0.5, 0);
  #                 }
  #                 else if (id(state) == 2) {
  #                   call.set_rgb(1, 1, 0);
  #                 }
  #                 else if (id(state) == 3) {
  #                   call.set_rgb(0, 1, 0);
  #                 }
  #                 else if (id(state) == 4) {
  #                   call.set_rgb(0, 0, 1);
  #                 }
  #                 else if (id(state) == 5) {
  #                   call.set_rgb(0.29, 0, 0.51);
  #                 }
  #                 else if (id(state) == 6) {
  #                   call.set_rgb(0.6, .11, .92);
  #                 }
  #                 else if (id(state) == 7) {
  #                   call.set_rgb(0, 1, 0);
  #                 }
  #               }
  #               call.perform();
  #             }
  #             id(state)++;
  #             if (id(state) == 8)
  #               state = 0;

output:
  - platform: esp8266_pwm
    id: red
    pin: GPIO5

  - platform: esp8266_pwm
    id: green
    pin: GPIO4

  - platform: esp8266_pwm
    id: blue
    pin: GPIO13

  - platform: esp8266_pwm
    id: coldwhite
    pin: GPIO14

  - platform: esp8266_pwm
    id: warmwhite
    pin: GPIO12

light:
  - platform: rgbww
    name: "Bar Bulb"
    red: red
    green: green
    blue: blue
    cold_white: coldwhite
    warm_white: warmwhite
    cold_white_color_temperature: 6000 K
    warm_white_color_temperature: 2700 K
    color_interlock: true
    id: lightbulb

sensor:
  - platform: wifi_signal
    name: "Bar Bulb WiFi"
    update_interval: 60s

text_sensor:
  - platform: homeassistant
    id: basement_scene
    name: "Basement Light Scene"
    entity_id: input_select.basement_scene
    internal: True