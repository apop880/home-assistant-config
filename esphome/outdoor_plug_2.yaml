esphome:
  name: outdoor_plug_2
  platform: ESP8266
  board: esp01_1m

wifi:
  ssid: !secret ssid
  password: !secret pass

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Outdoor Plug 2 Fallback Hotspot"
    password: "vn4zvGPG2CCD"

captive_portal:

# Enable logging
logger:

# Enable Home Assistant API
api:

ota:

status_led:
  # https://esphome.io/components/status_led
  pin:
    number: GPIO0

output:
  # https://esphome.io/components/output/esp8266_pwm.html
  - platform: esp8266_pwm
    id: blue_led_output
    pin:
      number: GPIO5
      inverted: True
      
light:
  # https://esphome.io/components/light/monochromatic.html
  - platform: monochromatic
    name: Outdoor Plug 2 LED
    output: blue_led_output
    id: blue_led
    default_transition_length: 1ms # default 1s
    internal: True
    
sensor:
  - platform: uptime
    name: Outdoor Plug 2 Uptime
    
  - platform: wifi_signal
    name: Outdoor Plug 2 Wifi Signal
    update_interval: 60s
    
binary_sensor:
  - platform: gpio
    # https://esphome.io/components/binary_sensor/gpio.html
    pin:
      number: GPIO13
    id: button
    name: Outdoor Plug 2 Button
    on_press:
      - switch.toggle: relay_template
    internal: True
    
switch:
  - platform: gpio
    # https://esphome.io/components/switch/gpio
    pin: GPIO12
    id: relay
    
  - platform: template
    # https://esphome.io/components/switch/template.html
    name: Outdoor Plug 2
    id: relay_template
    lambda: |-
      if (id(relay).state) {
        return true;
      } else {
        return false;
      }
    turn_on_action:
      - light.turn_on: blue_led
      - switch.turn_on: relay
      - script.stop: my_timer
      - script.execute: my_timer
    turn_off_action:
      - light.turn_off: blue_led
      - switch.turn_off: relay
      - script.stop: my_timer
      
script:
  id: my_timer
  then:
  - delay: 10h  # timer length
  - switch.turn_off: relay_template
  