esphome:
  name: entry_lights
  platform: ESP8266
  board: esp01_1m

wifi:
  ssid: !secret ssid
  password: !secret pass

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "entry_lights_hs"
    password: !secret entry_lights_pass

captive_portal:

# Enable logging
logger:

# Enable Home Assistant API
api:

ota:

output:
  - platform: esp8266_pwm
    id: red
    pin:
      number: GPIO0
      inverted: True

  - platform: esp8266_pwm
    id: green
    pin:
      number: GPIO12
      inverted: True

  - platform: esp8266_pwm
    id: blue
    pin:
      number: GPIO2
      inverted: True

light:
  - platform: monochromatic
    name: "Entry Red LED"
    output: red
    id: red_light
  
  - platform: monochromatic
    name: "Entry Green LED"
    output: green
    id: green_light

  - platform: monochromatic
    name: "Entry Blue LED"
    output: blue
    id: blue_light
    effects:
      - strobe:

binary_sensor:
  - platform: gpio
    # https://esphome.io/components/binary_sensor/gpio.html
    pin:
      number: GPIO13
      inverted: true
    id: button
    name: Entry Lights Button
    on_multi_click:
    - timing:
        - ON for at least 0.75s
      then:
        - logger.log: "Held"
        - while:
            condition:
              binary_sensor.is_on: button
            then:
              - homeassistant.service:
                  service: light.turn_on
                  data:
                    entity_id: light.entry
                    brightness_step_pct: '-10'
              - delay: 0.5s
    - timing:
        - ON for at most 0.75s
        - OFF for at most 0.5s
        - ON for at least 0.75s
      then:
        - logger.log: "Double Clicked and Held"
        - while:
            condition:
              binary_sensor.is_on: button
            then:
              - homeassistant.service:
                  service: light.turn_on
                  data:
                    entity_id: light.entry
                    brightness_step_pct: '10'
              - delay: 0.5s
    - timing:
        - ON for at most 0.75s
        - OFF for at least 0.5s
      then:
        - logger.log: "Single Clicked"
        - if:
            condition:
              text_sensor.state:
                id: light_state
                state: 'off'
            then:
              - homeassistant.service:
                  service: light.turn_on
                  data:
                    entity_id: light.entry
                    brightness_pct: '70'
            else:
              - homeassistant.service:
                  service: light.turn_off
                  data:
                    entity_id: light.entry
    - timing:
        - ON for at most 0.75s
        - OFF for at most 0.5s
        - ON for at most 0.75s
      then:
        - logger.log: "Double Clicked"
        - if:
            condition:
              text_sensor.state:
                id: group_state
                state: 'off'
            then:
              - homeassistant.service:
                  service: homeassistant.turn_on
                  data:
                    entity_id: group.dining
            else:
              - homeassistant.service:
                  service: homeassistant.turn_off
                  data:
                    entity_id: group.dining
    - timing:
        - ON for at most 0.75s
        - OFF for at most 0.5s
        - ON for at most 0.75s
        - OFF for at most 0.5s
        - ON for at most 0.75s
        - OFF for at most 0.5s
        - ON for at most 0.75s
        - OFF for at most 0.5s
        - ON for at most 0.75s
      then:
        - logger.log: "Five Clicks"
        - switch.toggle: relay
    internal: True
    
switch:
  - platform: gpio
    # https://esphome.io/components/switch/gpio
    pin: GPIO15
    id: relay
    restore_mode: ALWAYS_ON
    on_turn_off:
      - light.turn_on: red_light
    on_turn_on:
      - light.turn_off: red_light

text_sensor:
  - platform: homeassistant
    id: light_state
    name: "Entry Light State"
    entity_id: light.entry
    internal: True
    on_value:
      then:
        lambda: |-
          if(x == "on" && id(garage_door_state).state == "closed") {
            auto call = id(blue_light).turn_off();
            call.perform();
          }
          else {
            auto call = id(blue_light).turn_on();
            call.perform();
          }
  - platform: homeassistant
    id: group_state
    name: "Dining Group State"
    entity_id: group.dining
    internal: True
  - platform: homeassistant
    id: garage_door_state
    name: "Garage Door State"
    entity_id: cover.garage_door
    internal: True
    on_value:
      then:
        lambda: |-
          if(x == "closed") {
            if(id(light_state).state == "on") {
              auto call = id(blue_light).turn_off();
              call.perform();
            }
            else {
              auto call = id(blue_light).turn_on();
              call.set_effect("None");
              call.perform();
            }
          }
          else {
            auto call = id(blue_light).turn_on();
            call.set_effect("Strobe");
            call.perform();
          }