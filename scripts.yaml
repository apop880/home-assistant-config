#############################
# Lighting Modes for Morgan #
#############################

princess:
  alias: Princess Lighting
  sequence:
    service: input_select.select_option
    data:
      entity_id: input_select.morgan_lamp_mode
      option: Princess

rainbow:
  alias: Rainbow Lighting
  sequence:
    service: input_select.select_option
    data:
      entity_id: input_select.morgan_lamp_mode
      option: Rainbow

jungle:
  alias: Jungle Lighting
  sequence:
    service: input_select.select_option
    data:
      entity_id: input_select.morgan_lamp_mode
      option: Jungle

ocean:
  alias: Ocean Lighting
  sequence:
    service: input_select.select_option
    data:
      entity_id: input_select.morgan_lamp_mode
      option: Ocean

halloween:
  alias: Halloween Lighting
  sequence:
    service: input_select.select_option
    data:
      entity_id: input_select.morgan_lamp_mode
      option: Halloween

christmas:
  alias: Christmas Lighting
  sequence:
    service: input_select.select_option
    data:
      entity_id: input_select.morgan_lamp_mode
      option: Christmas

chiefs:
  alias: Chiefs Lighting
  sequence:
    service: input_select.select_option
    data:
      entity_id: input_select.morgan_lamp_mode
      option: Red

standard:
  alias: Standard Lighting
  sequence:
    service: input_select.select_option
    data:
      entity_id: input_select.morgan_lamp_mode
      option: Standard

focus:
  alias: Focus Lighting
  sequence:
    service: input_select.select_option
    data:
      entity_id: input_select.morgan_lamp_mode
      option: Focus

##############
# Chromecast #
##############

cc_skip:
  sequence:
    - condition: template
      value_template: "{{ state_attr(entity_id, 'media_position') != None }}"
    - service: media_player.media_seek
      data_template:
        entity_id: "{{ entity_id }}"
        seek_position: >
          {% set pos = state_attr(entity_id, 'media_position') %}
          {% set elapsed = now().timestamp() - state_attr(entity_id, 'media_position_updated_at').timestamp() %}
          {% set newpos = pos + seconds + (elapsed if is_state(entity_id, "playing") else 0) %}
          {{ (newpos, 0)|max }}

##################
# Basement Media #
##################

media_mute:
  sequence:
    - service: media_player.volume_mute
      data_template:
        entity_id: "{{ entity_id }}"
        is_volume_muted: "{{ not state_attr(entity_id, 'is_volume_muted') }}"
        
xbox_play_pause:
  sequence:
    - service_template: >
        {% if states.media_player.xbox_one.state == "paused" %}
          media_player.media_play
        {% else %}
          media_player.media_pause
        {% endif %}
      entity_id: media_player.xbox_one

xbox_stop:
  sequence:
    service: remote.send_command
    data:
      entity_id: remote.harmony_hub
      device: Microsoft Xbox One
      command: Stop

#Expose Xbox to Google Home
xbox_on:
  sequence:
    service: remote.turn_on
    data:
      entity_id: remote.harmony_hub
      activity: "Play Xbox One"
  alias: Xbox

################
# Check Config #
################

check_config:
  sequence: []
  alias: Check Configuration

###################
# GLEDOPTO On/Off #
###################

gledopto_on_off:
  sequence: []
  alias: Gledopto On/Off